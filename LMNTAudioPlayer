using UnityEngine;
using UnityEngine.Networking;
using System.Collections;
using System.Text;

public class LMNTAudioPlayer : MonoBehaviour
{
    [Header("LMNT API Settings")]
    [SerializeField] private string apiKey = "6679fdcfa98742d5996f1302bc61f982";
    [SerializeField] private string voiceId = "92c22d93-b7ea-491f-b7fe-6b3f5f41ea7a";
    [SerializeField] private AudioSource audioSource;

    public delegate void AudioPlaybackCompleteHandler();
    public event AudioPlaybackCompleteHandler OnAudioPlaybackComplete;

    private void Start()
    {
        // Check if audioSource is assigned
        if (audioSource == null)
        {
            // Try to get the component on this GameObject
            audioSource = GetComponent<AudioSource>();

            // If still null, create one
            if (audioSource == null)
            {
                audioSource = gameObject.AddComponent<AudioSource>();
                Debug.Log("AudioSource added automatically to LMNTAudioPlayer");
            }
        }

        // Verify API key is set
        if (apiKey == "YOUR_API_KEY_HERE" || string.IsNullOrEmpty(apiKey))
        {
            Debug.LogError("LMNT API Key not set! Please set your API key in the Inspector.");
        }
    }

    public void PlayText(string text)
    {
        if (string.IsNullOrEmpty(text))
        {
            Debug.LogWarning("Cannot play empty text");
            OnAudioPlaybackComplete?.Invoke();
            return;
        }

        StartCoroutine(RequestAndPlayAudio(text));
    }

    private IEnumerator RequestAndPlayAudio(string text)
    {
        string apiUrl = "https://api.lmnt.com/v1/ai/speech/bytes";

        // Prepare request body with proper JSON escaping
        string jsonBody = $"{{\"voice\": \"{voiceId}\", \"text\": \"{EscapeJson(text)}\"}}";
        byte[] bodyRaw = Encoding.UTF8.GetBytes(jsonBody);

        // Create the request
        using (UnityWebRequest request = new UnityWebRequest(apiUrl, "POST"))
        {
            request.uploadHandler = new UploadHandlerRaw(bodyRaw);
            request.downloadHandler = new DownloadHandlerAudioClip(apiUrl, AudioType.MPEG);

            // Set proper headers
            request.SetRequestHeader("Content-Type", "application/json");
            request.SetRequestHeader("Accept", "audio/mpeg");
            request.SetRequestHeader("X-API-Key", apiKey);

            Debug.Log("Sending TTS request to LMNT API");
            yield return request.SendWebRequest();

            if (request.result == UnityWebRequest.Result.Success)
            {
                AudioClip clip = DownloadHandlerAudioClip.GetContent(request);
                if (clip != null)
                {
                    audioSource.clip = clip;
                    audioSource.Play();
                    Debug.Log("LMNT TTS audio is playing");

                    // Wait for audio to finish playing
                    yield return new WaitWhile(() => audioSource.isPlaying);
                    Debug.Log("LMNT TTS audio playback completed");
                    OnAudioPlaybackComplete?.Invoke();
                }
                else
                {
                    Debug.LogError("Failed to convert audio from LMNT API response.");
                    OnAudioPlaybackComplete?.Invoke();
                }
            }
            else
            {
                Debug.LogError($"LMNT TTS Error: {request.responseCode} - {request.error}");
                Debug.LogError($"Response body: {request.downloadHandler.text}");
                OnAudioPlaybackComplete?.Invoke();
            }
        }
    }

    private string EscapeJson(string str)
    {
        if (string.IsNullOrEmpty(str))
            return "";

        return str
            .Replace("\\", "\\\\")
            .Replace("\"", "\\\"")
            .Replace("\n", "\\n")
            .Replace("\r", "\\r")
            .Replace("\t", "\\t");
    }
}
